(ns lifegame\modules\tick
  (:require lifegame\modules\board :as b)
  (:require lifegame\modules\cell :as c))

(defn- get-cells [height width]
  (for [x :range [height]
        y :range [width]]
    (c/Cell x y)))

(defn next-board [board f]
  (let [matrix (board :matrix)
        width (count (matrix 0))
        height (count matrix)
        cells (get-cells height width)
        cell-infos (map |(do [$1 $2]) cells (map |(f $ board) cells))
        new-matrix (reduce (fn [matrix [cell v]]
                             (put-in matrix [(cell :x) (cell :y)] v))
                           (b/create-matrix height width 0)
                           cell-infos)]
     (b/Board new-matrix)))

(defn tick [board]
  (next-board board c/next-status))
