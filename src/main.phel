(ns lifegame\main
  (:require phel-cli-gui\terminal-gui :as gui)
  (:require lifegame\modules\board :as b)
  (:require lifegame\modules\cell :as c)
  (:require lifegame\modules\tick :as t))

(def *height* 20)
(def *width* 40)

(defn draw-board [board last-board tick-count]
  (let [matrix (board :matrix)
        last-matrix (if last-board (last-board :matrix) [])
        width (count (matrix 0))
        height (count matrix)]
    (dofor [x :range [height]
            y :range [width]]
      (when-not (= (get-in matrix [x y]) (get-in last-matrix [x y]))
        (gui/render y x (case (get-in matrix [x y])
                          1 "#"
                          0 " "))))
    (gui/render 1 (+ *height* 2) (format "tick: %d" tick-count))))

(defn random-board []
  (let [board (b/create *height* *width*)
        board (c/born (c/Cell 0 0) board)
        board (c/born (c/Cell 0 1) board)
        board (c/born (c/Cell 0 2) board)
        board (c/born (c/Cell 1 1) board)
        board (c/born (c/Cell 1 0) board)]
    board))


(when-not *build-mode*
  (gui/clear-screen)
  (loop [board (random-board)
         last-board nil
         tick-count 1]
    (php/usleep 50000)
    (draw-board board last-board tick-count)
    (recur (t/tick board) board (inc tick-count))))
