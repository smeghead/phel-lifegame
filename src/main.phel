(ns lifegame\main
  (:require phel\str :as s)
  (:require phel-cli-gui\terminal-gui :as gui)
  (:require lifegame\modules\board :as b)
  (:require lifegame\modules\cell :as c)
  (:require lifegame\modules\tick :as t))

(def *height* 20)
(def *width* 40)

(defn- get-matrix-data [matrix height width]
  (loop [x 0
         acc []]
    (if (>= x height)
      (s/join "\n" acc)
      (recur
        (inc x)
        (push acc (loop [y 0
                         acc []]
                    (if (>= y width)
                      (s/join "" (map |(case $
                                         1 "#"
                                         0 " ") acc))
                      (recur (inc y) (push acc (get-in matrix [x y]))))))))))

(defn draw-board [board tick-count]
  (let [matrix (board :matrix)
        width (count (matrix 0))
        height (count matrix)]
    (gui/render 0 0 (get-matrix-data matrix height width))
    (gui/render 1 (+ *height* 2) (format "tick: %d" tick-count))))

(defn random-board []
  (b/create *height* *width*))

(when-not *build-mode*
  (gui/clear-screen)
  (loop [board (random-board)
         tick-count 1]
    (php/usleep 50000)
    (draw-board board tick-count)
    (recur (t/tick board) (inc tick-count))))
